version: '2'

services:
  spark:
    image: docker.io/bitnami/spark:3.5
    build:
      context: .
      target: spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8089:8080"
      - "7077:7077"
      - "4040:4040"
    volumes:
      - /spark_scripts:/home/scripts
  spark-worker:
    image: docker.io/bitnami/spark:3.5
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      #- SPARK_WORKER_MEMORY=1G
      #- SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    depends_on:
      - spark


  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
    volumes:
      - "../kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT


  minio:
    image: docker.io/bitnami/minio:2024
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminadmin
    volumes:
      - '../minio_data:/bitnami/minio/data'


  postgresql:
    image: docker.io/bitnami/postgresql:16
    volumes:
      - '../postgresql_data:/bitnami/postgresql'
    ports:
      - '5432:5432'
    environment:
      - POSTGRESQL_DATABASE=airflow_db
      - POSTGRESQL_USERNAME=airflow_user
      - POSTGRESQL_PASSWORD=airflow_pass
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow_user"]
      interval: 10s
      retries: 5
      start_period: 5s
  
  airflow:
    build:
      context: .
      target: airflow
    image: apache/airflow:2.8.1
    ports:
      - "8085:8080"
    
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow_user:airflow_pass@postgresql:5432/airflow_db
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor

    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    #restart: always
    depends_on:
      - postgresql


  mongodb:
    image: docker.io/bitnami/mongodb:7.0
    ports:
      - "27017:27017"
    volumes:
      - '../mongodb_data:/bitnami/mongodb'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_SYSTEM_LOG_VERBOSITY=3
  
  metabase:
    image: metabase/metabase:latest
    ports:
      - "3000:3000"
    volumes:
      - "../metabase_data:/metabase_data"
    environment:
    - MB_ENABLE_PASSWORD_LOGIN=false
    - MB_PASSWORD_COMPLEXITY=weak
    - MB_PASSWORD_LENGTH=1

volumes:
  minio_data:
    driver: local
  kafka_data:
    driver: local
  postgresql_data:
    driver: local
  mongodb_data:
    driver: local
  metabase_data:
    driver: local
  
